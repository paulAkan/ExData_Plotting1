?filter
ans<-filter(filteredData, Income.group=="lower middle income")
ans<-filter(filteredData, Income.group==lower middle income)
ans<-filter(filteredData, Income.group==c("lower middle income"))
ans<-filteredData[Income.group=="Lower middle income"]
ans<-filter(filteredData, Income.group==Lower middle income)
ans<-filter(filteredData, Income.group=="Lower middle income")
ans
View(filteredData)
?arrange
ans2<-arrange(filteredData, Income.group=="Lower middle income")
filteredData%>%filter(Income.group=="Lower middle income")
filteredData%>%filter(Income.group=="Lower middle income")%>%select(quantileGDP)
filteredData%>%filter(Income.group=="Lower middle income" & count>152
)
filteredData%>%filter(Income.group=="Lower middle income" & count>152)
View(ans)
ans<-filter(quantileGDP>152)
ans%>%filter(quantileGDP>152)
?cut2
table(filteredData$quantileGDP, filteredData$rankingGDP)
filteredData$quantileGDP2 <- cut(filteredData$rankingGDP, g=5)
filteredData$quantileGDP2 <- cut2(filteredData$rankingGDP, g=5)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
filteredData$quantileGDP2 <- cut2(filteredData$rankingGDP, g=5)
table(filteredData$quantileGDP2, filteredData$rankingGDP)
table(filteredData$quantileGDP2, filteredData$rankingGDP.Groups)
table(filteredData$quantileGDP2, filteredData$Income.group)
table(filteredData$Income.group, filteredData$quantileGDP2)
breaks <- quantile(filteredData$rankingGDP, probs=seq(0, 1, 0.2), na.rm=TRUE)
filteredData$quantileGDP <- cut(filteredData$rankingGDP, breaks=breaks)
table(filteredData$Income.group, filteredData$quantileGDP)
rm(list=ls())
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package=lubridate)
today()
this_day<-today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment<-now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_data<-ymd("1989-05-17")
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12 1975")
mdy("March 12, 1975")
mdy("March 12 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms(03:22:14)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment)
this_moment<-update(this_moment, hours=10, minutes=36, seconds=0)
this_moment
nyc<-now("America/New_York")
NYC
nyc
nyc
depart<-nyc+days(2)
depart
depart<-update(depart, hours=17, minutes=34, seconds=0)
depart<-update(depart, hours=17, minutes=34)
depart
arrive<-nyc+hours(15)+minute(50)
arrive<-depart +hours(15)+minute(50)
arrive<-depart +hours(15)+minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
with_tz(arrive, "Asia/Hong_Kong")
arrive<-with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time<-mdy(June 17 2008, tz+"Singapore")
last_time<-mdy(June 17 2008, tz="Singapore")
last_time<-mdy("June 17 2008", tz="Singapore")
last_time<-mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long<-interval(last_time, arrive, "Asia/Hong_Kong")
how_long<-interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(dplyr)
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
idaho.state<-tbl_df(fread)
idaho.state<-tbl_df(fread(url))
idaho.state
View(idaho.state)
str(idaho.state)
names(idaho.state)
?strsplit
splitNames<-strsplit(names(idaho.state), "wgtp")
names(idaho.state)
splitNames
splitNames[[123]]
View(splitNames)
url2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
gdp.data<-tbl_df(fread(url2))
gdp.data
gdp.data<-fread(url2, skip=4L)
myVector <- c('V1', 'V2', 'V4', 'V5')
gdp.data<-gdp.data[,myVector, with=FALSE]
names(gdp.data)<-c("CountryCode", "rankingGDP", "short.Name", "gdp")
View(gdp.data)
library(stringr)
?str_replace
gdp.data$gdp<-str_replace_all(gdp.data$gdp, "[,]", "")
gdp.data%>%summarize(mean(gdp))
gdp.data%>%select(gdp)%>%summarize(mean(gdp))
gdp.data%>%select(gdp)%>%summarize(mean(gdp.data$gdp))
gdp.data$gdp<-as.numeric(gdp.data$gdp)
gdp.data$gdp<-as.numeric(gdp.data$gdp)
gdp.data$rankingGDP<-as.integer(gdp.data$rankingGDP)
gdp.data<-gdp.data[rankingGDP>0 & CountryCode !=""]
gdp.data%>%summarize(mean(gdp))
gdp.data%>%select(gdp)%>%summarize(mean(gdp))
gdp.data%>%select(gdp)%>%summarize(mean(gdp.data$gdp))
gdp.data%>%summarize(mean("gdp"))
gdp.data$gdp<-as.numeric(gdp.data$gdp)
View(gdp.data)
gdp.data%>%select(gdp)%>%summarize(mean(gdp.data$gdp))
gdp.data%>%summarize(count=n(), mean(gdp.data$gdp))
gdp.data%>%summarize(count=n(), avg=mean(gdp.data$gdp))
gdp.data%>%group_by(gdp)%>%summarize(count=n(), avg=mean(gdp.data$gdp))
library(dplyr)
gdp.data%>%summarize(count=n(), avg=mean(gdp.data$gdp))
mean(gdp.data$gdp)
gdp.data%>%mean(gdp)
gdp.data%>%summarize(mean(gdp))
gdp.data%>%summarize(mean(gdp.datagdp))
gdp.data%>%summarize(mean(gdp.data$gdp))
class
class(gdp.data)
gdp.data2<-tbl_df(fread(url2))
gdp.data2<-fread(url2, skip=4L)
gdp.data2<-gdp.data2[,myVector, with=FALSE]
names(gdp.data2)<-c("CountryCode", "rankingGDP", "short.Name", "gdp")
gdp.data2$gdp<-gsub(gdp.data2$gdp, ",", "")
gdp.data2$gdp<-gsub(",", "", gdp.data$gdp)
gdp.data2<-gsub(",", "", gdp.data2$gdp)
gdp.data2$gdp<-as.numeric(gdp.data2$gdp)
View()
View(gdp.data2)
gdp.data2
gdp.data2<-fread(url2, skip=4L)
gdp.data2<-gdp.data2[,myVector, with=FALSE]
names(gdp.data2)<-c("CountryCode", "rankingGDP", "short.Name", "gdp")
gdp<-gsub(",", "", gdp.data2$gdp)
View(gdp.data2)
View(gdp)
gsub(",", "", gdp.data2$gdp)
View(gdp.data2)
gdp.data2$gdp<-gsub(",", "", gdp.data2$gdp)
View(gdp.data2)
mean(gdp.data2$gdp)
mean(gdp.data2$gdp, na.rm = TRUE)
gdp.data2$gdp<-as.numeric(gdp.data2$gdp)
mean(gdp.data2$gdp, na.rm = TRUE)
mean(gdp.data$gdp)
summarize(gdp.data, mean(gdp))
summarize(gdp.data, avg=mean(gdp))
summarise(gdp.data, avg=mean(gdp))
detach("package:hmisc", unload = TRUE)
detach("package:Hmisc", unload = TRUE)
summarise(gdp.data, avg=mean(gdp))
gdp.data3<-tbl_df(fread(url2))
View(gdp.data3)
names(gdp.data3)
gdp.data3<-tbl_df(read.csv(url2))
grep("^United, short.name"), 4
grep("^United", short.name), 4
grep("*United", short.name), 4
grep("*United", short.name), 2
grep("*United$", short.name), 3
grep("United$", short.name), 3
isUnited<-grepl("^United", gdp.data$short.Name)
isUnited
summarise(isUnited)
summarize(isUnited)
summarize(isUnited)
length(isUnited)
isUnited<-grep("^United", gdp.data$short.Name)
length(isUnited)
isUnited<-grep("^United", gdp.data$short.Name),3
URL4<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
edu.data<-tbl_df(fread(URL4))
edu
edu.data
gdp.data4<-tbl_df(fread(URL4))
edu
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
edu.data<-fread(fileUrl2)
edu.data<-fread(fileUrl2, select = c(1, 2, 3, 4), col.names = c("CountryCode",  "Long.Name", "Income.group", "Region"))
gdp.data
edu.data
class(gdp.data)
class(edu.data)
gdp.data<-tbl_df(gdp.data)
class(gdp.data)
edu.data<-tbl_df(edu.data)
edu.data
joinedData<-full_join(gdp.data, edu.data, by = "CountryCode")
View(joinedData)
arrangedData<-arrange(joinedData, !is.na(rankingGDP))
View(arrangedData)
arrangedData<-arrange(joinedData, desc(rankingGDP), !is.na(rankingGDP))
arrangedData<-arrange(joinedData, desc(rankingGDP), na.rm=TRUE)
arrangedData<-arrange(joinedData, desc(rankingGDP), !is.na(rankingGDP))
View(eduData)
View(edu.Data)
View(edu.data)
fileUrl2<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
edu2<-fread(fileUrl2)
View(edu2)
edu2<-fread(fileUrl2, select = c(1, 10, 11), col.names = c("CountryCode",  "Long.Name", "Income.group", "Region"))
edu2<-fread(fileUrl2)
joinedData<-full_join(gdp.data, edu2, by = "CountryCode")
View(joinedData)
isFiscalYearEnd <- grepl("fiscal year end", tolower(joindData$Special.Notes))
isFiscalYearEnd <- grepl("fiscal year end", tolower(joinedData$Special.Notes))
subs(" ", ".", names(edu2))
sub(" ", ".", names(edu2))
joinedData<-full_join(gdp.data, edu2, by = "CountryCode")
View(joinedData)
sub(" ", ".", names(joinedData))
View(joinedData)
isFiscalYearEnd <- grepl("fiscal year end", tolower(joinedData$Special.Notes))
joinedData
?data_frame
names(joinedData)<-> sub(" ", ".", names(joinedData))
names(joinedData)<- sub(" ", ".", names(joinedData))
View(joinedData)
isFiscalYearEnd <- grepl("fiscal year end", tolower(joinedData$Special.Notes))
isJune <- grepl("june", tolower(joinedData$Special.Notes))
table(isFiscalYearEnd, isJune)
joinedData[isFiscalYearEnd & isJune, Special.Notes]
joinedData[isFiscalYearEnd & isJune,]%>% %>%select(Long.Names)
joinedData[isFiscalYearEnd & isJune]%>% %>%select(Long.Names)
joinedData[,isFiscalYearEnd & isJune]%>% %>%select(Long.Names)
joinedData%>%filter(Special.Notes=isFiscalYearEnd & Special.Notes=isJune)%>%select(Long.Name)
joinedData%>%filter(Special.Notes==isFiscalYearEnd & Special.Notes==isJune)%>%select(Long.Name)
joinedData%>%filter(Special.Notes==c(isFiscalYearEnd) & Special.Notes==isJune)%>%select(Long.Name)
joinedData%>%filter(Special.Notes==c(isFiscalYearEnd) & Special.Notes==c(isJune)%>%select(Long.Name)
)
joinedData%>%filter(Special.Notes==c(isFiscalYearEnd) & Special.Notes==c(isJune)%>%select(Long.Name))
joinedData%>%filter(Special.Notes[c(isFiscalYearEnd)] & Special.Notes[c(isJune)]%>%select(Long.Name))
joinedData%>%filter(Special.Notes[c(,isFiscalYearEnd)] & Special.Notes[c(,isJune)]%>%select(Long.Name))
joinedData%>%filter(Special.Notes=isFiscalYearEnd & Special.Notes=isJune)%>%select(Long.Name)
joinedData%>%filter(Special.Notes[,isFiscalYearEnd] & Special.Notes[,isJune]%>%select(Long.Name))
joinedData%>%filter(Special.Notes[,isFiscalYearEnd] & Special.Notes[,isJune])%>%select(Long.Name)
joinedData%>%filter(Special.Notes=isFiscalYearEnd & Special.Notes=isJune))%>%select(Long.Name)
joinedData%>%filter(Special.Notes==c(isFiscalYearEnd) & Special.Notes==c(isJune))%>%select(Long.Name)
joinedData%>%filter(Special.Notes==isFiscalYearEnd & Special.Notes==isJune)%>%select(Long.Name)
joinedData%>%filter(Special.Notes==isFiscalYearEnd)%>%filter(Special.Notes==isJune)%>%select(Long.Name)
joinedData%>%filter(Special.Notes==isFiscalYearEnd)
joinedData%>%filter(Special.Notes[[isFiscalYearEnd]]
)
joinedData%>%filter(Special.Notes[isFiscalYearEnd])
library(magrittr)
joinedData%>%filter(Special.Notes[isFiscalYearEnd])
joinedData%>%filter(Special.Notes[[isFiscalYearEnd]])
joinedData%>%filter(Special.Notes=="isFiscalYearEnd")
joinedData%>%filter(Special.Notes==grepl("fiscal year end", tolower(joinedData$Special.Notes))
)
sapply
sapply(joinedData, isFiscalYearEnd)
nas<-joinedData[, isFiscalYearEnd]
nas<-joinedData[, c(isFiscalYearEnd)]
dim(isFiscalYearEnd)
str(isFiscalYearEnd)
nas<-joinedData[, c(unclass(isFiscalYearEnd))]
nas<-joinedData[, which(isFiscalYearEnd)]
nas<-joinedData[which(isFiscalYearEnd)]
nas<-joinedData[which(isFiscalYearEnd), with=FALSE]
nas<-joinedData[,c(which(isFiscalYearEnd)), with=FALSE]
nas<-joinedData[,c(which(isFiscalYearEnd))]
which(isFiscalYearEnd)
nas<-joinedData[,which(isFiscalYearEnd)]
which(isFiscalYearEnd & isJune)
ok<-which(isFiscalYearEnd & isJune)
nas<-joinedData[, ok]
nas<-joinedData$CountryCode[, ok]
nas<-joinedData$CountryCode[ok]
nas
nas<-joinedData[ok]
joinedData%>%filter(CountryCode[ok])
nas<-joinedData$Long.Name[ok]
nas
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
ans<-year(sampleTimes)
sampleTimes <- index(amzn)
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
Y2012 <- subset(sampleTimes, year(sampleTimes) == 2012)
length(Y2012)
length(which(wday(Y2012, label = T) == "Mon"))
rm(list=ls())
u<-c(22, 8, 33, 6, 8, 29, -2)
fl<-list(c(5,12, 13, 12, 13, 5, 13), c("a", "bc", "a", "bc", "a","a"))
tapply(u, fl, length)
fl<-list(c(5,12, 13, 12, 13, 5, 13), c("a", "bc", "a", "a","bc", "a","a"))
tapply(u, fl, length)
tapply(u, fl, mean)
tapply(u, fl, sum)
table(f1)
table(fl)
ct<-data.frame(c(vote.for.x="Yes", "Yes", "No", "Not Sure", "No", voted.for.x.last="Yes", "No", "No", "Yes", "No"))
cctab<-table(ct)
cctab
ct
ct<-data.frame(list(vote.for.x=c("Yes", "Yes", "No", "Not Sure", "No"), voted.for.x.last=c("Yes", "No", "No", "Yes", "No"))
)
ct<-data.frame(list(vote.for.x=c("Yes", "Yes", "No", "Not Sure", "No"), voted.for.x.last=c("Yes", "No", "No", "Yes", "No")))
cctab<-table(ct)
cctab
?apply
apply(cct, c(1,2), sum)
apply(ct, c(1,2), sum)
apply(ct, 1, sum)
ct
apply(cctab, c(1,2), sum)
cctab
apply(cctab, 1, sum)
addmargins(ctab)
addmargins(cctab)
dimnames(cctab)
cctab
subtable(ctab,list(vote.for.x=c("Yes", "Yes", "No", "Not Sure", "No"), voted.for.x.last=c("Yes", "No", "No", "Yes", "No"))
)
subtable(ctab,list(vote.for.x=c("Yes", "No"), voted.for.x.last=c("Yes", "No")))
library(dplyr)
subtable(ctab,list(vote.for.x=c("Yes", "No"), voted.for.x.last=c("Yes", "No")))
library(data.table)
subtable(ctab,list(vote.for.x=c("Yes", "No"), voted.for.x.last=c("Yes", "No")))
subtable <- function(tbl,subnames) {
# get array of cell counts in tbl
tblarray <- unclass(tbl)
# we'll get the subarray of cell counts corresponding to subnames by
# calling do.call() on the "[" function; we need to build up a list
# of arguments first
dcargs <- list(tblarray)
ndims <- length(subnames)  # number of dimensions
for (i in 1:ndims) {
dcargs[[i+1]] <- subnames[[i]]
}
subarray <- do.call("[",dcargs)
# now we'll build the new table, consisting of the subarray, the
# numbers of levels in each dimension, and the dimnames() value, plus
# the "table" class attribute
dims <- lapply(subnames,length)
subtbl <- array(subarray,dims,dimnames=subnames)
class(subtbl) <- "table"
return(subtbl)
}
subtable(ctab,list(vote.for.x=c("Yes", "No"), voted.for.x.last=c("Yes", "No")))
subtable(cctab,list(vote.for.x=c("Yes", "No"), voted.for.x.last=c("Yes", "No")))
swirl
swirl()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
SWIR
swirl()
head(pm2.5)
head(PM2.5)
head(pollution)
dim(pollution)
summary(polltion$pm25)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col="blue")
abline
abline(12)
abline(h=12)
hist(pp, col="green")
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col = "gree", breaks = 100)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg<-table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
getwd()
setwd("C:/Users/Paul Akangah/week1proj")
source('C:/Users/Paul Akangah/week1proj/plot1.R')
source('C:/Users/Paul Akangah/week1proj/plot2.R')
source('C:/Users/Paul Akangah/week1proj/plot3.R')
source('C:/Users/Paul Akangah/week1proj/plot3.R')
source('C:/Users/Paul Akangah/week1proj/plot3.R')
with(data.model, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=3,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
### Save to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
with(data.model, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
### Save to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
?legend
with(data, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Saving to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
with(data.model, {
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Saving to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
source('C:/Users/Paul Akangah/week1proj/plot3.R')
datetime <- strptime(paste(data.model$Date, data.model$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalActivePower <- as.numeric(data.model$Global_active_power)
subMetering1 <- as.numeric(data.model$Sub_metering_1)
subMetering2 <- as.numeric(data.model$Sub_metering_2)
subMetering3 <- as.numeric(data.model$Sub_metering_3)
png("plot3.png", width=480, height=480)
plot(datetime, subMetering1, type="l", ylab="Energy Submetering", xlab="")
lines(datetime, subMetering2, type="l", col="red")
lines(datetime, subMetering3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
View(data.model)
source('C:/Users/Paul Akangah/week1proj/plot3.R')
source('C:/Users/Paul Akangah/week1proj/plot4.R')
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(data.model, {
plot(Global_active_power~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
plot(Voltage~Datetime, type="l",
ylab="Voltage (volt)", xlab="")
plot(Sub_metering_1~Datetime, type="l",
ylab="Global Active Power (kilowatts)", xlab="")
lines(Sub_metering_2~Datetime,col='Red')
lines(Sub_metering_3~Datetime,col='Blue')
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(Global_reactive_power~Datetime, type="l",
ylab="Global Rective Power (kilowatts)",xlab="")
})
## Save to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
source('C:/Users/Paul Akangah/week1proj/plot4.R')
dir()
cat(README.md)
